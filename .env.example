# Postman Governance Stack - Environment Configuration Template
# Copy this file to .env and update the values for your environment

# =============================================================================
# Postman API Configuration
# =============================================================================

# REQUIRED: Your Postman API key (get from: https://postman.postman.co/settings/me/api-keys)
POSTMAN_API_KEY=PMAK-your-api-key-here

# =============================================================================
# Security Configuration
# =============================================================================

# REQUIRED: JWT secret for token signing (generate with: openssl rand -base64 32)
JWT_SECRET=your-secure-jwt-secret-here

# Authentication configuration
AUTHENTICATION_ENABLED=true
DEFAULT_AUTH_METHOD=jwt

# Default admin credentials (change immediately after first login)
GOVERNANCE_ADMIN_PASSWORD=ChangeMe123!
GOVERNANCE_SERVICE_KEY=PGSK-your-service-key-here
GOVERNANCE_READONLY_PASSWORD=ViewOnly123!

# Password policy
MIN_PASSWORD_LENGTH=12
REQUIRE_SPECIAL_CHARS=true
BCRYPT_SALT_ROUNDS=12

# Rate limiting
MAX_AUTH_ATTEMPTS=5
AUTH_WINDOW_MINUTES=15
LOCKOUT_MINUTES=30

# Session configuration
SESSION_TIMEOUT_MINUTES=480
MAX_CONCURRENT_SESSIONS=5

# =============================================================================
# Application Configuration
# =============================================================================

# Environment (development, staging, production)
NODE_ENV=development

# API server configuration
API_PORT=3001
API_HOST=0.0.0.0

# Database Configuration
DATABASE_PATH=/app/data/governance.db

# Collection Schedule (cron format)
COLLECTION_SCHEDULE=0 */6 * * *

# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=json

# Configuration File Path (optional)
CONFIG_PATH=/app/config/governance-collector.yml

# Postman API Rate Limiting
POSTMAN_RATE_LIMIT=280

# =============================================================================
# Legacy Grafana Configuration (for backward compatibility)
# =============================================================================

# Grafana admin credentials
GRAFANA_ADMIN_PASSWORD=change-this-password
GRAFANA_SECRET_KEY=change-this-secret-key

# =============================================================================
# Docker Secrets Configuration (Production)
# =============================================================================

# Docker Compose Secrets (for production deployment)
# These should be stored as Docker secrets, not environment variables
# DOCKER_SECRET_POSTMAN_API_KEY=/run/secrets/postman_api_key
# DOCKER_SECRET_JWT_SECRET=/run/secrets/jwt_secret
# DOCKER_SECRET_ADMIN_PASSWORD=/run/secrets/admin_password
# DOCKER_SECRET_GRAFANA_PASSWORD=/run/secrets/grafana_admin_password

# =============================================================================
# Development Configuration
# =============================================================================

# Development mode settings (only for NODE_ENV=development)
DEV_SKIP_AUTH=false
DEV_MOCK_POSTMAN_API=false
DEV_ENABLE_DEBUG_ROUTES=false

# Test configuration
TEST_DATABASE_PATH=:memory:
TEST_API_KEY=PMAK-test-key-for-development-only
TEST_JWT_SECRET=test-jwt-secret-not-for-production

# =============================================================================
# Vercel Deployment Configuration
# =============================================================================

# Vercel automatically provides these in production
VERCEL_URL=
VERCEL_ENV=
VERCEL_REGION=

# For Vercel deployment, use these simplified settings:
# NODE_ENV=production
# DATABASE_PATH=:memory:
# PORT=3000